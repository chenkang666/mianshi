{"version":3,"sources":["component/cardcolor/index.js","component/cardtext/index.js","component/card/index.js","component/cardcreate/index.js","component/list/index.js","component/titlechoose/index.js","component/title/index.js","component/demo/index.js","App.js","serviceWorker.js","index.js"],"names":["CardColor","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","color","react_default","a","createElement","className","style","backgroundColor","Component","CardText","title","sock","lone","num","Card","card","data","cardcolor","cardtext","CardCreate","List","list","show","nextProps","nextContext","setState","_this2","map","item","index","component_card","key","component_cardcreate","TitleChoose","fn","changeData","onClick","bind","Title","component_titlechoose","Demo","idx","chooseDiv","document","querySelectorAll","forEach","titleName","querySelector","innerHTML","id","component_title","handleChangeData","component_list","App","component_demo","Boolean","window","location","hostname","match","ReactDOM","render","src_App","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.db9e2212.chunk.js","sourcesContent":["import React, {Component} from 'react';\r\n\r\nclass CardColor extends Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state={\r\n            color: this.props.color\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div className=\"card-color\">\r\n                <div className={\"card-color-r\"} style={{backgroundColor:this.state.color}} />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default CardColor\r\n","import React, {Component} from 'react';\r\n\r\nclass CardText extends Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            title: this.props.title,\r\n            sock: this.props.sock,\r\n            lone: this.props.lone,\r\n            num: this.props.num\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div className=\"card-text\">\r\n                <div className={\"card-text-title\"}>\r\n                    <span>{this.state.title}</span>\r\n                </div>\r\n                <div className={\"card-text-state\"}>\r\n                    <div className={this.state.sock ? \"card-text-state-sock\" : \"none\"}>\r\n                        <span>锁定</span>\r\n                    </div>\r\n                    <div className={this.state.lone ? \"card-text-state-lone\" : \"none\"}>\r\n                        <span>私密</span>\r\n                    </div>\r\n                </div>\r\n                <div className={\"card-text-num\"}>\r\n                    <span>{this.state.num}</span>\r\n                    <span>项目</span>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default CardText\r\n","import React, {Component} from 'react';\r\nimport './index.css'\r\nimport CardColor from '../cardcolor'\r\nimport CardText from '../cardtext'\r\n\r\n\r\nclass Card extends Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            card: this.props.data\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div className={this.state.card.sock ? \"sock card\" : \"card\"}>\r\n                <CardColor color={this.state.card.color}/>\r\n                <CardText\r\n                    title={this.state.card.title}\r\n                    sock={this.state.card.sock}\r\n                    lone={this.state.card.lone}\r\n                    num={this.state.card.num}\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Card\r\n","import React,{Component} from 'react';\r\nimport './index.css'\r\n\r\nclass CardCreate extends Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state ={}\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className={\"card card-create\"}>\r\n                <div className={\"card-create-add\"}>\r\n                    <span>+</span>\r\n                </div>\r\n                <div className={\"card-create-text\"}>\r\n                    <span>新建项目组</span>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default CardCreate\r\n","import React, {Component} from 'react';\r\nimport './index.css'\r\nimport Card from '../card'\r\nimport CardCreate from '../cardcreate'\r\n\r\nclass List extends Component{\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            list: this.props.data,\r\n            show: this.props.show\r\n        }\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps, nextContext) {\r\n        if (this.state.show === nextProps.show)  return;\r\n        this.setState({\r\n            show: nextProps.show\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div className={\"list\"}>\r\n                {\r\n                    this.state.list.map((item, index) => {\r\n                        switch (this.state.show) {\r\n                            case \"all\":\r\n                                return (\r\n                                    <Card\r\n                                        data={item}\r\n                                        key={index}\r\n                                    />\r\n                                );\r\n                            case \"sock\":\r\n                                if (item.sock){\r\n                                    return(\r\n                                        <Card\r\n                                            data={item}\r\n                                            key={index}\r\n                                        />\r\n                                    )\r\n                                }else{\r\n                                    break;\r\n                                }\r\n                            case \"lone\":\r\n                                if (item.lone){\r\n                                    return(\r\n                                        <Card\r\n                                            data={item}\r\n                                            key={index}\r\n                                        />\r\n                                    )\r\n                                }else{\r\n                                    break;\r\n                                }\r\n                            default: break\r\n                        }\r\n                        return(<div key={index} />);\r\n                    })\r\n                }\r\n                <CardCreate />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default List\r\n","import React, {Component} from 'react'\r\nimport './index.css'\r\n\r\nclass TitleChoose extends Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state={\r\n            fn: this.props.changeData\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div className={\"title-choose-list\"}>\r\n                <div className={\"on\"} onClick={this.state.fn.bind(this,\"all\", 0)}>\r\n                    <span>所有项目组</span>\r\n                </div>\r\n                <div onClick={this.state.fn.bind(this,\"sock\", 1)}>\r\n                    <span>锁定</span>\r\n                </div>\r\n                <div onClick={this.state.fn.bind(this,\"lone\", 2)}>\r\n                    <span>私密</span>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default TitleChoose\r\n","import React, {Component} from 'react';\r\nimport './index.css'\r\nimport TitleChoose from '../titlechoose'\r\n\r\nclass Title extends Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            fn: this.props.changeData\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div className={\"title\"}>\r\n                <div className={\"title-name\"}>\r\n                    <span>所有项目组</span>\r\n                </div>\r\n\r\n                <TitleChoose\r\n                    changeData={this.state.fn}\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Title\r\n","import React, {Component} from 'react'\r\nimport './index.css'\r\nimport List from '../list'\r\nimport Title from '../title'\r\n\r\nclass Demo extends Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state={\r\n            list: [\r\n                {\r\n                    color: \"#81D395\",\r\n                    title: \"墨刀工作室\",\r\n                    sock: false,\r\n                    lone: false,\r\n                    num: 3\r\n                },\r\n                {\r\n                    color: \"#F8C374\",\r\n                    title: \"墨刀魔法棒团队\",\r\n                    sock: false,\r\n                    lone: false,\r\n                    num: 0\r\n                },\r\n                {\r\n                    color: \"#F2908D\",\r\n                    title: \"超级工作组\",\r\n                    sock: false,\r\n                    lone: true,\r\n                    num: 4\r\n                },\r\n                {\r\n                    color: \"#E38073\",\r\n                    title: \"冷笑客服组\",\r\n                    sock: false,\r\n                    lone: false,\r\n                    num: 4\r\n                },\r\n                {\r\n                    color: \"#F8C767\",\r\n                    title: \"设计部门\",\r\n                    sock: false,\r\n                    lone: false,\r\n                    num: 4\r\n                },\r\n                {\r\n                    color: \"#8DCAEB\",\r\n                    title: \"Third Reactor\",\r\n                    sock: true,\r\n                    lone: true,\r\n                    num: 1\r\n                }\r\n            ],\r\n            show: \"all\"\r\n        }\r\n    }\r\n\r\n    handleChangeData(data,idx){\r\n        const chooseDiv = document.querySelectorAll(\".title-choose-list > div\");\r\n        chooseDiv.forEach((item, index) => {\r\n            chooseDiv[index].className = \"\"\r\n        })\r\n        chooseDiv[idx].className = \"on\"\r\n\r\n        const titleName = document.querySelector(\".title-name > span\");\r\n\r\n        switch (data) {\r\n            case \"all\":\r\n                this.setState({\r\n                    show: \"all\"\r\n                });\r\n                titleName.innerHTML = \"所有项目组\";\r\n                break;\r\n            case \"sock\":\r\n                this.setState({\r\n                    show: \"sock\"\r\n                });\r\n                titleName.innerHTML = \"锁定\";\r\n                break;\r\n            case \"lone\":\r\n                this.setState({\r\n                    show: \"lone\"\r\n                });\r\n                titleName.innerHTML = \"私密\";\r\n                break;\r\n            default:\r\n                break\r\n        }\r\n    }\r\n    render() {\r\n        return(\r\n            <div id={\"demo\"}>\r\n                <Title\r\n                    changeData={this.handleChangeData.bind(this)}\r\n                />\r\n                <List\r\n                    data={this.state.list}\r\n                    show={this.state.show}\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Demo\r\n","import React from 'react';\nimport './App.css';\nimport Demo from './component/demo'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n        <Demo />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}